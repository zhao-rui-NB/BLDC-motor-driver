# 通訊格式說明文件

## 概述
本協議用於控制 BLDC 馬達的指令與回應，採用固定結構設計，具備校驗功能以確保數據完整性。

---

## 指令格式

### **格式結構**
指令由以下部分組成：
- **Frame Head (1 byte)**: 固定值 `0xAA`，用於標識指令的起始。
- **Command (1 byte)**: 功能碼，表示具體的操作。
- **Parameter (可選, N bytes)**: 指令需要的參數，根據功能碼決定是否需要參數及其長度。
- **Checksum (1 byte)**: 校驗碼，為 `frame_head + cmd + parameter` 的 XOR 運算結果。

### **格式範例**
| Frame Head (0xAA) | Command | Parameter (可選) | Checksum |



#### **無參數指令**
- **功能**: 查詢當前轉速
- **數據**: `0xAA 0x02 0xA8`
- **說明**:
  - `0xAA`: Frame Head
  - `0x02`: Command (CMD_GET_SPEED)
  - `0xA8`: Checksum

#### **帶參數指令**
- **功能**: 設定目標轉速為 1500 RPM (`0x05DC`)
- **數據**: `0xAA 0x01 0x05 0xDC 0x70`
- **說明**:
  - `0xAA`: Frame Head
  - `0x01`: Command (CMD_SET_SPEED)
  - `0x05DC`: Parameter (1500 RPM)
  - `0x70`: Checksum

---

## 回應格式

### **格式結構**
回應由以下部分組成：
- **Frame Head (1 byte)**: 固定值 `0xAA`，用於標識回應的起始。
- **Status Code (1 byte)**: 回應狀態碼，表示指令執行情況。
- **Reply Value (可選, N bytes)**: 回應的數據值，根據指令類型決定是否需要及其長度。
- **Checksum (1 byte)**: 校驗碼，為 `frame_head + status_code + reply_value` 的 XOR 運算結果。

### **格式範例**
| Frame Head (0xAA) | Status Code | Reply Value (可選) | Checksum |


#### **無回應數據**
- **功能**: 停止馬達
- **數據**: `0xAA 0x00 0xAA`
- **說明**:
  - `0xAA`: Frame Head
  - `0x00`: Status Code (STATUS_OK)
  - `0xAA`: Checksum

#### **帶回應數據**
- **功能**: 查詢當前轉速，當前轉速為 1200 RPM (`0x04B0`)
- **數據**: `0xAA 0x00 0x04 0xB0 0xFE`
- **說明**:
  - `0xAA`: Frame Head
  - `0x00`: Status Code (STATUS_OK)
  - `0x04B0`: Reply Value (1200 RPM)
  - `0xFE`: Checksum

---

## 功能碼說明

| 功能名稱             | 功能碼 (Command) | 參數 (Parameter)                   | 回應值 (Reply Value)                 |
|----------------------|------------------|-------------------------------------|---------------------------------------|
| 設定目標轉速         | `0x01`           | 16-bit 目標轉速值 (RPM)            | 無                                     |
| 查詢當前轉速         | `0x02`           | 無                                  | 16-bit 當前轉速值 (RPM)               |
| 控制馬達啟停         | `0x03`           | 1 byte (0 = 停止, 1 = 啟動)         | 無                                     |
| 設定運行模式         | `0x04`           | 1 byte (0 = 手動, 1 = 自動)         | 無                                     |
| 查詢系統狀態         | `0x05`           | 無                                  | 1 byte 狀態碼 (馬達運行狀態、錯誤等) |

---

## 狀態碼說明

| 狀態碼 (Status Code)    | 說明                              |
|-------------------------|-----------------------------------|
| `0x00` (STATUS_OK)      | 指令執行成功                      |
| `0x01` (STATUS_INVALID_FRAME) | 無效的數據幀                      |
| `0x02` (STATUS_CHECKSUM_ERROR) | 校驗碼錯誤                        |
| `0x03` (STATUS_INVALID_CMD)    | 不支持的功能碼                    |
| `0x04` (STATUS_INVALID_PARAM)  | 無效的參數                        |

---

## 校驗碼計算方法

校驗碼計算為所有數據字段的 XOR 運算結果。

### **範例**
- **指令**: `0xAA 0x01 0x05 0xDC`
  - XOR 運算: `0xAA ^ 0x01 ^ 0x05 ^ 0xDC = 0x70`
  - 校驗碼: `0x70`

---

## 錯誤處理

1. **校驗失敗**:
   - 回應 `0xAA 0x02` (STATUS_CHECKSUM_ERROR)。
2. **無效指令**:
   - 回應 `0xAA 0x03` (STATUS_INVALID_CMD)。
3. **參數錯誤**:
   - 回應 `0xAA 0x04` (STATUS_INVALID_PARAM)。

---

# sdfsdf



# 通訊格式說明文件

## 指令格式
**結構**: `Frame Head (1B) + Command (1B) + Parameter (可選, N B) + Checksum (1B)`
- **無參數範例**: `0xAA 0x02 0xA8` (查詢轉速)
- **有參數範例**: `0xAA 0x01 0x05 0xDC 0x70` (設定轉速 1500 RPM)

## 回應格式
**結構**: `Frame Head (1B) + Status Code (1B) + Reply Value (可選, N B) + Checksum (1B)`
- **無回應數據**: `0xAA 0x00 0xAA` (執行成功)
- **有回應數據**: `0xAA 0x00 0x04 0xB0 0xFE` (回應轉速 1200 RPM)

## 功能碼說明
| 功能名稱       | 功能碼 | 參數             | 回應值             |
|----------------|--------|------------------|--------------------|
| 設定目標轉速   | `0x01` | 4 byte 轉速值    | 無                 |
| 查詢當前轉速   | `0x02` | 無               | 4 byte 轉速值       |
| 控制馬達啟停   | `0x03` | 1 byte: 0 停止/1 啟動 | 無                 |
| 設定運行模式   | `0x04` | 1B: 0 手動PWM/1 自動PI | 無                 |

## 狀態碼說明
| 狀態碼  | 說明            |
|---------|-----------------|
| `0x00`  | 指令執行成功    |
| `0x01`  | 無效數據幀      |
| `0x02`  | 校驗碼錯誤      |
| `0x03`  | 無效功能碼      |
| `0x04`  | 無效參數        |

## 校驗碼計算
**方法**: 對所有字段取 XOR。
- **範例**: `0xAA ^ 0x01 ^ 0x05 ^ 0xDC = 0x70`

